<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">


    <context:property-placeholder location="classpath:properties/dev.properties" />


    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" 
    	init-method="init" destroy-method="close" >
		
       <!-- 基本属性 url、user、password -->
		<property name="url" value="${db.connectionURL}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="${db.pool.initialSize}" />
		<property name="minIdle" value="${db.pool.minIdle}" />
		<property name="maxActive" value="${db.pool.maxActive}" />

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait" value="${db.pool.maxWait}" />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="${db.pool.timeBetweenEvictionRunsMillis}" />

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="${db.pool.minEvictableIdleTimeMillis}" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 如果用Oracle，则把poolPreparedStatements配置为true，mysql可以配置为false。分库分表较多的数据库，建议配置为false -->
		<property name="poolPreparedStatements" value="false" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${db.pool.maxPoolPreparedStatementPerConnectionSize}" />

		<!-- 配置监控统计拦截的filters -->
		<!-- druid配置监控统计拦截的filters -->
		<property name="filters" value="config" />
		<!-- connectProperties属性来打开mergeSql功能 -->
		<!-- <property name="connectionProperties" value="config.decrypt=true" /> -->
		
    </bean>

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
        <property name="maxTotal" value="${redis.maxTotal}" />
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}"/>
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />					
	</bean>
	
	<bean id="redisManager" class="com.azcx9d.common.cache.RedisManager">
        <property name="host" value="${redis.host}" />
        <property name="port" value="${redis.port}" />
        <property name="expire" value="${redis.expire}" />
        <property name="timeout" value="${redis.timeout}" />
        <property name="password" value="${redis.password}" /> 
    </bean>
    
    <bean id="tokenManagerDao" class="com.azcx9d.common.token.TokenManagerDao">
    	<property name="redisManager" ref="redisManager" />
    </bean>

    <bean id="sysUserTokenDAO" class="com.azcx9d.system.redis.SysUserTokenManagerDAO">
    	<property name="redisManager" ref="redisManager" />
    </bean>
		
    <bean id="sqlSessionFactory" class="com.azcx9d.common.support.PackagesSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描enity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.azcx9d.*.entity"/>
        <!-- 扫描sql配置文件：mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath*:mapper/**/*.xml"/>
    </bean>

    <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
         <property name="basePackage" value="com.azcx9d.agency.dao,com.azcx9d.user.dao,com.azcx9d.common.dao,
                                             com.azcx9d.business.dao,com.azcx9d.consumer.dao,com.azcx9d.system.dao,
                                             com.azcx9d.mybatisgenerator.dao,com.azcx9d.pay.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>
</beans>